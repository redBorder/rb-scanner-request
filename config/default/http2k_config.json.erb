{
  "listeners":[
    {"proto":"http", "port": <%= node["redBorder"]["http2k"]["port"].to_s %>, "num_threads":<%= [ node["cpu"]["total"].to_i - 1, 1].max %>, "mode":"epoll", "redborder_uri":true, "decode_as":"rb_http2k", "connection_memory_limit": 131072, "connection_timeout": 60, "per_ip_connection_limit": 0, "connection_limit": <%= ( [ node["cpu"]["total"].to_i - 1, 1].max*512 ) %>}
  ],
  "brokers":"<%= @kafka_managers.nil? ? "kafka.#{ node["redBorder"]["cdomain"] }" : (@kafka_managers.first(5).map{|x| (x.name == node.name ? "127.0.0.1" : "#{x.name}.#{ x["redBorder"]["cdomain"] }" ) }.join(",")) %>",
  "n2kafka_id": "http2k", 
  "rdkafka.socket.max.fails":"3",
  "rdkafka.socket.keepalive.enable":"true",
  "rdkafka.queue.buffering.max.messages":"<%= (@memory.nil? ? 1000 : [ @memory/10, 1000].max ) %>",
  "rdkafka.queue.buffering.max.ms":"10000",
  "rdkafka.message.send.max.retries":"0",
  "rdkafka.retry.backoff.ms":"100",
  "rb_http2k_config": {
    "organizations_sync": {
      "topics": ["rb_monitor"],
      "put_url": "http://erchef.<%= node["redBorder"]["cdomain"] %>:7979/",
      "topics": ["rb_http2k_sync","rb_monitor"],
      "interval_s": 25,
      "clean_on": {
        "timestamp_s_mod":86400,
        "timestamp_s_offset":86399
      }
    },
    "organizations_uuids": {
<% inserted=false %>
<% @organizations.each do |x| %>
<% if x.override_attributes["redBorder"]["megabytes_limit"].nil? or (!x.override_attributes["redBorder"]["megabytes_limit"].nil? and ((x.override_attributes["redBorder"]["megabytes_limit"].to_i > 0) or (x.override_attributes["redBorder"]["megabytes_limit"] == ""))) and !(!x.override_attributes["redBorder"]["organization_webui"].nil? and (x.override_attributes["redBorder"]["organization_webui"]["status"] == "suspend" or x.override_attributes["redBorder"]["organization_webui"]["status"] == "restricted")) %>
      <%= inserted ? "," : "" %>"<%= x.override_attributes["redBorder"]["organization_uuid"] %>": {
<% if ((!x.override_attributes["redBorder"]["megabytes_limit"].nil?) and (x.override_attributes["redBorder"]["megabytes_limit"] != "")) %>
        "limits": {
          "bytes": <%= (x.override_attributes["redBorder"]["megabytes_limit"].to_i * 1024 * 1024) %>
        }
<% end %>
      }
<% inserted=true %>
<% end %>
<% end %>
    },
    "sensors_uuids" : {
<% inserted=false %>
<% (@ipsg_nodes + @ips_nodes).each_with_index do |p, i| %>
      <%= inserted ? "," : "" %>"<%= p["redBorder"]["sensor_uuid"] %>": {
<% inserted=true %>
<% if !p["redBorder"].nil? and !p["redBorder"]["organization_uuid"].nil? %>
        "organization_uuid": "<%= p["redBorder"]["organization_uuid"] %>",
<% end %>
        "enrichment": {
           "index_partitions": <%= [ 1, ( !p["redBorder"].nil? and !p["redBorder"]["index_partitions"].nil? ) ? p["redBorder"]["index_partitions"].to_i : 5].max %>
          ,"index_replicas": <%= [ 1, ( !p["redBorder"].nil? and !p["redBorder"]["index_replicas"].nil? ) ? p["redBorder"]["index_replicas"].to_i : 1].max %>
          ,"sensor_uuid": "<%= p["redBorder"]["sensor_uuid"] %>"
<% ["namespace", "namespace_uuid", "organization", "organization_uuid", "service_provider", "service_provider_uuid", "deployment", "deployment_uuid", "market", "market_uuid", "campus", "campus_uuid", "building", "building_uuid", "floor", "floor_uuid"].each do |ss| %>
<% if !p["redBorder"][ss].nil? and p["redBorder"][ss]!="" %>
          ,"<%= ss %>": "<%= p["redBorder"][ss] %>"
<% end %>
<% end %>
        }
      }
<% end %>
<% @proxy_nodes.each_with_index do |p, i| %>
      <%= inserted ? "," : "" %>"<%= p["redBorder"]["sensor_uuid"] %>": {
<% inserted=true %>
<% if !p["redBorder"].nil? and !p["redBorder"]["organization_uuid"].nil? %>
        "organization_uuid": "<%= p["redBorder"]["organization_uuid"] %>",
<% end %>
        "enrichment": {
           "index_partitions": <%= [ 1, ( !p["redBorder"].nil? and !p["redBorder"]["index_partitions"].nil? ) ? p["redBorder"]["index_partitions"].to_i : 5].max %>
          ,"index_replicas": <%= [ 1, ( !p["redBorder"].nil? and !p["redBorder"]["index_replicas"].nil? ) ? p["redBorder"]["index_replicas"].to_i : 1].max %>
          ,"proxy_uuid": "<%= p["redBorder"]["sensor_uuid"] %>"
<% 
insert_uuid=true
if !p["redBorder"].nil? and !p["redBorder"]["sensors_mapping"].nil?
  p["redBorder"]["sensors_mapping"].each do |k,v|
    insert_uuid = false if v.size>0
  end
end

%>
<% if insert_uuid %>
          ,"sensor_uuid": "<%= p["redBorder"]["sensor_uuid"] %>"
<% end %>
<% ["namespace", "namespace_uuid", "organization", "organization_uuid", "service_provider", "service_provider_uuid", "deployment", "deployment_uuid", "market", "market_uuid", "campus", "campus_uuid", "building", "building_uuid", "floor", "floor_uuid"].each do |ss| %>
<% if !p["redBorder"][ss].nil? and p["redBorder"][ss]!="" %>
          ,"<%= ss %>": "<%= p["redBorder"][ss] %>"
<% end %>
<% end %>
        }
      }
<% end %>
    },
    "topics" : {
      "rb_flow": {
        "partition_key":"client_mac",
        "partition_algo":"mac" 
      },
      "rb_loc": {},
      "rb_event": {},
      "rb_nmsp": {},
      "rb_radius": {},
      "rb_state": {},
      "rb_social": {},
      "rb_monitor": {},
      "rb_iot": {},
      "rb_vault": {},
      "sflow": {},
      "rb_scanner": {}
    }
  }
}
